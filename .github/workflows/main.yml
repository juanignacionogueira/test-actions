name: CI
on:
  workflow_dispatch:
    inputs:
      pre-release-version:
        description: "Version para desarrollo. Ej: 1.2.0 => Se va a taggear con 0.1.2.0"
        required: false

jobs:
  prepare-build:
    runs-on: ubuntu-latest
    continue-on-error: false
    outputs:
      version: ${{steps.version-resolver.outputs.value}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current branch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: currentBranch

      - uses: haya14busa/action-cond@v1
        id: version-resolver
        with:
          cond: ${{ github.event.inputs.pre-release-version == '' }}
          if_true: ""
          if_false: "0.${{ github.event.inputs.pre-release-version }}"

      - name: Increase pom version
        run: |
          mvn versions:set -DgroupId=juanignacionogueira.tests -DartifactId=test-actions -DnewVersion=${{steps.version-resolver.outputs.value}} -DprocessDependencies=false -DprocessPlugins=false  -DprocessParent=false
          git config --global user.name "Juan"
          git config --global user.email "juanignacionogueira@gmail.com"
          git commit -a -m "Increase pom version ${{steps.version-resolver.outputs.value}}"
          git push origin ${{steps.currentBranch.outputs.branch}}

      - name: Create tag
        run: |
          git tag -a ${{steps.version-resolver.outputs.value}} -m "Nueva versi√≥n ${{steps.version-resolver.outputs.value}}"
          git push && git push origin ${{steps.version-resolver.outputs.value}}
          git pull origin
          git rev-parse HEAD

      - name: Create pull request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "main"
          github_token: ${{secrets.GITHUB_TOKEN}}

      - name: update-pull-request
        uses: kt3k/update-pr-description@v1.0.0
        with:
          pr_title: "TEST"
          destination_branch: "main"
          github_token: ${{secrets.GITHUB_TOKEN}}

  update-status:
    needs: [ prepare-build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set status
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'some-check'
          state: 'success'
